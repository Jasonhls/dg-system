<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dg.mall.system.mapper.SysUserRoleMapper">

	 <select id="selectUserPageByRoleId"  resultType="com.dg.mall.system.vo.SysUserRoleVO"  >
	  select 
	    su.* ,sr.role_id ,sr.role_name   
	  from 
	      dg_sys_user su LEFT JOIN dg_sys_user_role sur on sur.user_id=su.user_id LEFT JOIN dg_sys_role sr  on sur.role_id=sr.role_id 
	  where 1=1   
	      and su.is_deleted =0 and <![CDATA[ su.user_id <> #{userVO.userId}]]> 
	  <if test="userVO.startTime !=null">
	      and su.create_time &gt;= #{userVO.startTime} 
	  </if>
	  <if test="userVO.endTime !=null">
	      and su.create_time &lt;= #{userVO.endTime} 
	  </if>
	   <if test="userVO.roleId !=null">
	      and sr.role_id = #{userVO.roleId} 
	  </if>
	  <if test="userVO.conditionRole != null">
	       and  su.user_id in(select user_id from dg_sys_role ssr ,dg_sys_user_role ssur 
	       where ssur.role_id =ssr.role_id and ssr.parent_role_id=#{userVO.conditionRole}) 
	  </if>
	  <if test="userVO.keyWords != null">
          and (sr.role_name like CONCAT('%',#{userVO.keyWords},'%')  
		  or su.email  like CONCAT('%',#{userVO.keyWords},'%')  
		  or su.name  like CONCAT('%',#{userVO.keyWords},'%') 
		  or su.phone like CONCAT('%',#{userVO.keyWords},'%'))
	  </if>
	   order by update_time desc 
	</select>
	
   <!--更新用户对应的角色 -->
   <update id="updateUserRoleByUserId" parameterType="com.dg.mall.system.vo.SysUserRoleVO" >
     update dg_sys_user_role set role_id=#{roleId} ,update_time=#{updateTime},update_user=#{updateUser} where user_id=#{userId};
   </update>
   
    <!--查询所有角色信息或根据创建人查询对应的角色信息  -->
    <select id="queryRolesByRoleCreateUser"  resultType="com.dg.mall.system.entity.SysRole"  >
	  select 
	    sr.*  
	  from 
           dg_sys_role sr  
	  where 1=1   
	      and sr.is_deleted=0 
	  <if test="isUsed != null">
	       and sr.is_used =#{isUsed} 
	  </if>
	  <if test="createdUser !=null">
	      and sr.created_user =#{createdUser} 
	  </if>
	</select>
	
      <!-- 根据userid查询角色信息 -->
	 <select id="selectRoleByUserId"  parameterType="java.lang.Integer" resultType="com.dg.mall.system.entity.SysRole"  >
	  select 
	    sr.*  
	  from 
	       dg_sys_user_role sur LEFT JOIN dg_sys_role sr  on sur.role_id=sr.role_id 
	  where 1=1   
	      and sr.is_deleted=0 and sr.is_used =1 and sur.user_id =#{userId}
	</select>
	
     <!-- 根据userid查询用户信息 -->
	<select id="queryUserByUserId" parameterType="java.lang.Integer"  resultType="com.dg.mall.system.vo.SysUserRoleVO"  >
	  select 
	    su.* ,sr.role_id ,sr.role_name ,sr.parent_role_id    
	  from 
	      dg_sys_user su LEFT JOIN dg_sys_user_role sur on sur.user_id=su.user_id LEFT JOIN dg_sys_role sr  on sur.role_id=sr.role_id 
	  where 1=1   
	       and su.is_deleted =0 and su.user_id=#{userId}
	
	</select>

	<update id="switchIsUsedByRoleId" parameterType="com.dg.mall.system.entity.SysRole">
		update
			dg_sys_user su
		left join dg_sys_user_role sur on su.user_id = sur.user_id
			set su.is_used = #{isUsed}
		where sur.role_id = #{roleId}
		and su.is_deleted = 0
	</update>
	
    <update id="updateIsGeneralAdministrator" parameterType="com.dg.mall.system.vo.SysUserRoleVO">
        update dg_sys_user su set su.is_general_administrator=0,update_time=#{updateTime}, update_user=#{createUser} 
        where su.is_general_administrator =1 and su.user_id in(select user_id from dg_sys_user_role sur 
        where sur.role_id=#{roleId}) and <![CDATA[ su.user_id <> #{userId} ]]> 
	</update>
	 
	 <select id="queryUserAdministratorsByRoleId"  parameterType="com.dg.mall.system.vo.SysUserRoleVO"  resultType="Integer">
       select IFNULL(count(1),0) from dg_sys_user su , dg_sys_user_role sur ,dg_sys_role sr where su.user_id=sur.user_id 
       and sur.role_id= sr.role_id and su.is_general_administrator =#{isGeneralAdministrator}  and sr.role_id=#{roleId} 
       and  <![CDATA[ su.user_id<>#{userId}]]> 
	 </select>
	 <update id="updateUserRoleById" parameterType="com.dg.mall.system.vo.SysUserRoleVO">
	    update dg_sys_user_role sur left join dg_sys_user su on su.user_id = sur.user_id  left join dg_sys_role sr on sr.role_id=sur.role_id 
	     set sur.role_id=#{conditionRole} where su.is_general_administrator=0 and sr.role_id=#{roleId} and <![CDATA[ sur.user_id <> #{userId}]]> 
	 </update>
	 
	<delete id="deleteUserByRoleIds">
		delete dg_sys_user_role sur
		where sur.role_id in
		<foreach item="item" index="index" collection="roleIds"
				 open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
</mapper>