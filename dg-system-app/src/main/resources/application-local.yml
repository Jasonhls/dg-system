server:
  port: 8001

dg:
  log:
    kafka: true
    trace: true
    level: error,info
jwt:
  secret: dd9397d36dd64baf9d28b63ca476b635
  expiration: 82800

spring:
  datasource:
    url: jdbc:mysql://192.168.11.159:3306/dg_mall_system?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=Hongkong
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    validation-query: select 'x'
  kafka:
    bootstrap-servers: 192.168.11.159:9092
    listener:
      type: BATCH
    producer:
      batchSize: 500
      keySerializer: org.apache.kafka.common.serialization.StringSerializer
      valueSerializer: com.dg.mall.logger.serizlizer.FastjsonKafkaSerializer
    consumer:
      group-id: commonLogList
      keyDeserializer: org.apache.kafka.common.serialization.StringDeserializer
      valueDeserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
      maxPollRecords: 500
  redis:
    # Redis服务器地址
    host: 192.168.11.159
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password:
    # 连接超时时间（毫秒）
    timeout: 1000
    database: 1

mybatis-plus:
  mapper-locations: classpath:mappers/*.xml
  typeAliasesPackage: com.dg.mall.system.entity

  configuration:
    lazy-loading-enabled: true  #延迟加载
    default-statement-timeout: 5 #超时时间，它决定驱动等待数据库响应的秒数。
    map-underscore-to-camel-case: true #驼峰命名规则

eureka:
  instance:
    prefer-ip-address: true
    lease-expiration-duration-in-seconds: 20   #服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除(默认90秒)
    lease-renewal-interval-in-seconds: 5       #服务刷新时间配置，每隔这个时间会主动心跳一次(默认30秒)


  client:
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka
    registry-fetch-interval-seconds: 10  #重新刷新服务地址的时间




feign:
  hystrix:
    enabled: false
  client:
    config:
      default:
        connectTimeout: 300  #创建连接的超时时间 单位：毫秒
        readTimeout: 3000    #处理请求的超时时间 单位：毫秒
        errorDecoder: com.dg.mall.core.feign.RosesFeignErrorDecoder
        requestInterceptors:
          - com.dg.mall.core.feign.RosesFeignHeaderProcessInterceptor

hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE #为了RosesFeignHeaderProcessInterceptor
          thread:
            timeoutInMilliseconds: 2000

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always